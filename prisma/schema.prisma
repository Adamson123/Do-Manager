// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
}

model User {
  id                       String                     @id @default(uuid())
  name                     String
  email                    String                     @unique
  image                    String?
  password                 String
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
  tasks                    Task[]
  subtaskCompletionHistory SubtaskCompletionHistory[]
}

model Task {
  id          String    @id @default(uuid())
  title       String    @db.VarChar(255)
  description String    @db.Text
  priority    Priority  @default(HIGH)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  subtasks    Subtask[]
  User        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

model Subtask {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  dueDate     DateTime @default(now())
  completed   Boolean  @default(false)
  //dateCompleted DateTime @default(now())
  favorite    Boolean  @default(false)
  Task        Task?    @relation(fields: [taskId], references: [id])
  taskId      String?
}

model SubtaskCompletionHistory {
  id                String   @id @default(uuid())
  day               String
  subtasksCompleted String[]
  User              User?    @relation(fields: [userId], references: [id])
  userId            String?
}
